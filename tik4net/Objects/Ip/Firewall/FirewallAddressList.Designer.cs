//*********************************************************
//  Autogenerated 14.3.2011 0:16:20
//*********************************************************
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

/*
!re
=.id=*1
=list=VOIP
=address=10.43.100.172
=dynamic=false
=disabled=false
=comment=VOIP telefony (maji specialni queue s vysokou prioritou)
*/
namespace Tik4Net.Objects.Ip.Firewall
{
    /// <summary>
    /// Represents one row in /ip/firewall/address-list on mikrotik router.
    /// </summary>
    [TikEntity("/ip/firewall/address-list", TikEntityEditMode.Editable)]    
    public sealed partial class FirewallAddressList: TikEntityBase
    {
        /// <summary>
        /// Row address property.
        /// </summary>
        [TikProperty("address", typeof(string), false, TikPropertyEditMode.Editable)]
        public string Address 
        { 
            get { return Properties.GetAsStringOrNull("address"); }
            set { Properties.SetAttribute("address", value); }
        }

        /// <summary>
        /// Row comment property.
        /// </summary>
        [TikProperty("comment", typeof(string), false, TikPropertyEditMode.Editable)]
        public string Comment 
        { 
            get { return Properties.GetAsStringOrNull("comment"); }
            set { Properties.SetAttribute("comment", value); }
        }        	

        /// <summary>
        /// Row disabled property.
        /// </summary>
        [TikProperty("disabled", typeof(bool), true, TikPropertyEditMode.Editable)]
        public bool Disabled 
        { 
            get { return Properties.GetAsBoolean("disabled"); }
            set { Properties.SetAttribute("disabled", value); }
        }        	

        /// <summary>
        /// Row dynamic property.
        /// </summary>
        [TikProperty("dynamic", typeof(bool), true, TikPropertyEditMode.ReadOnly)]
        public bool Dynamic 
        { 
            get { return Properties.GetAsBoolean("dynamic"); }
            // Property R/O set { Properties.SetAttribute("dynamic", value); }
        }        	

        /// <summary>
        /// Row list property.
        /// </summary>
        [TikProperty("list", typeof(string), false, TikPropertyEditMode.Editable)]
        public string List 
        { 
            get { return Properties.GetAsStringOrNull("list"); }
            set { Properties.SetAttribute("list", value); }
        }        	
    }
    
    /// <summary>
    /// Represents list of rows in /ip/firewall/address-list on mikrotik router.
    /// </summary>    
    [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710:IdentifiersShouldHaveCorrectSuffix")]    
    public sealed partial class FirewallAddressListList : TikUnorderedList<FirewallAddressList>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FirewallAddressListList"/> class.
        /// Default active session (<see cref="TikSession.ActiveSession"/> is used).
        /// </summary>
        public FirewallAddressListList() 
            : base()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="FirewallAddressListList"/> class.
        /// </summary>
        /// <param name="session">The session used to access mikrotik.</param>
        public FirewallAddressListList(TikSession session)
            : base(session)
        {
        }
    }           
}